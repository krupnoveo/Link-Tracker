app:
  scheduler:
    enable: true
    interval: 10s
    force-check-delay: 20s
  database-access-type: jpa
  kafka:
    topics:
      link-update: linkUpdate
  use-queue: true

clients:
  github:
    base-url: https://api.github.com
    token: ${GITHUB_TOKEN}
  stackoverflow:
    base-url: https://api.stackexchange.com/2.3
    key: ${STACKOVERFLOW_KEY}
    token: ${STACKOVERFLOW_TOKEN}

retry:
  client-configs:
    - client: bot
      mode: fixed
      max-attempts: 5
      min-delay: 1s
      max-delay: ~
      multiplier: ~
      codes: 429

    - client: github
      mode: fixed
      max-attempts: 10
      min-delay: 1s
      max-delay: ~
      multiplier: ~
      codes: 429

    - client: stackoverflow
      mode: fixed
      max-attempts: 10
      min-delay: 1s
      max-delay: ~
      multiplier: ~
      codes: 429

rate-limiting:
  capacity: 1
  tokens-per-period: 1
  gen-period: 5s
  excluded-ips: 127.0.0.1

spring:
  config:
    import: optional:file:.env[.properties], optional:file:src/main/resources/messages.properties
  application:
    name: scrapper
  liquibase:
    enabled: false
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${DATABASE_URL}
    password: ${DATABASE_USERNAME}
    username: ${DATABASE_USERNAME}
  jpa:
    hibernate:
      ddl-auto: validate

  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false


management:
  endpoints:
    web:
      base-path: /
      exposure:
        include: info, health, prometheus
      path-mapping:
        prometheus: metrics
  metrics:
    tags:
      application: ${spring.application.name}
  server:
    port: 8081


server:
  port: 8080

logging:
  config: classpath:log4j2-plain.xml
springdoc:
  swagger-ui:
    path: /swagger-ui
